services:
  # Main PostgreSQL database
  postgres-main:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: go_init_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_main_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # PostgreSQL for message queue
  postgres-mq:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: pg_mq_db
    ports:
      - "5433:5432"
    volumes:
      - postgres_mq_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Atlas migration service
  migrate:
    image: arigaio/atlas:latest
    depends_on:
      postgres-main:
        condition: service_healthy
    volumes:
      - .:/work
    working_dir: /work
    command: ["migrate", "apply", "--env", "local"]

  # HTTP+gRPC Server with live reload
  server:
    build:
      context: .
      dockerfile: Dockerfile.dev
    depends_on:
      postgres-main:
        condition: service_healthy
      postgres-mq:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully
    ports:
      - "8080:8080"  # HTTP
      - "9090:9090"  # gRPC
    environment:
      - DOCKER_ENV=true
      - DB_HOST=postgres-main
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=go_init_db
      - MQ_DB_HOST=postgres-mq
      - MQ_DB_PORT=5432
      - MQ_DB_USER=postgres
      - MQ_DB_PASSWORD=postgres
      - MQ_DB_NAME=pg_mq_db
    command: ["/app/bin/server"]
    develop:
      watch:
        - action: rebuild
          path: ./go.mod
        - action: rebuild
          path: ./go.sum
        - action: sync
          path: .
          target: /app
          ignore:
            - tmp/
            - .git/
            - .gitignore
            - README.md
            - Dockerfile*
            - docker-compose*
        - action: rebuild
          path: ./cmd/
        - action: rebuild
          path: ./internal/
        - action: rebuild
          path: ./pkg/

  # Consumer service with live reload
  consumer:
    build:
      context: .
      dockerfile: Dockerfile.dev
    depends_on:
      postgres-main:
        condition: service_healthy
      postgres-mq:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully
    environment:
      - DOCKER_ENV=true
      - DB_HOST=postgres-main
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=go_init_db
      - MQ_DB_HOST=postgres-mq
      - MQ_DB_PORT=5432
      - MQ_DB_USER=postgres
      - MQ_DB_PASSWORD=postgres
      - MQ_DB_NAME=pg_mq_db
    command: ["/app/bin/consumer"]
    develop:
      watch:
        - action: rebuild
          path: ./go.mod
        - action: rebuild
          path: ./go.sum
        - action: sync
          path: .
          target: /app
          ignore:
            - tmp/
            - .git/
            - .gitignore
            - README.md
            - Dockerfile*
            - docker-compose*
        - action: rebuild
          path: ./cmd/
        - action: rebuild
          path: ./internal/
        - action: rebuild
          path: ./pkg/

volumes:
  postgres_main_data:
  postgres_mq_data: